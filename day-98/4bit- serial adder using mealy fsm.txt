module serial_adder (
input clk,rst,a,b,
output reg sum, done ); 
parameter IDLE=1'b0,ADD=1'b1;
reg cs,ns;
reg  [1:0]count;
reg carry;
always @(posedge clk or posedge rst)
begin
if (rst) begin
cs<=IDLE;
end else begin
cs<=ns;
end
end
always @(*) begin
case (cs)
IDLE: begin
ns=ADD;
end
ADD: begin
if (count == 2'd3)
ns=IDLE;
else 
ns=ADD;
end
default:
ns=IDLE;
endcase
end
always @(posedge clk or posedge rst ) begin
if (rst ) begin 
carry<=0;
count<=0;
sum<=0;
done<=0;
end else begin 
case(cs)
IDLE: begin 
carry<=0;
count<=0;
done<=0;
end
ADD: begin
sum <= a^b^carry;
carry <=(a & b)|(a & carry )|(b & carry );
count <=count +1;
if (count == 2'd3)
done <=1;
end
endcase
end
end
endmodule
